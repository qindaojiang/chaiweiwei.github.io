---
layout: post
title: "8月12"
date: 2015-08-12 15:48:21 +0800
comments: true
categories: 
---

最近项目也没有什么新的需求，就在做一些查漏补缺的地方，着重是在看一些动画方面的好事例，可以应用到求攻略上面的，顺便学习、实践一下，code4app网站上还是有不少的好代码，不过很多在Github上也有提供链接。

<!--more-->

因为最近看的代码也是多的，感触也是大家的代码都写的好干净的，不过也存在因为展示事例简单的原因吧，这里补充一点UITableView上的属性，之前没有接触到过，现在想想也是厉害的：
 
 一、cell计算高度补充
 
这样能自动的进行cell高度的适配不用特地计算了

```
// 经过测试，实际表现及运行效率均相似，大👍
tableView.estimatedRowHeight = 80
tableView.rowHeight = UITableViewAutomaticDimension

```
以上是一个小点的补充，实际应用中如果涉及到UILabel不要忘了设置lineNume哦。

二、像素化

下面总结一下我在练习动画的时候一直比较困惑的地方吧，一开始在学习layer的时候，多处都讲到了关于像素的问题，有的时候会出现一些锯齿，这里分情况可以用两种方式来解决一下：

1. contentsScale :layer是可以填充content的，必将常用是添加个图片什么的，当没有设置frame的时候，没有很好的使content适应图层的情况下，图片是很有可能出现放大，出现锯齿的情况的，这样就要设置好像素值［UISreen main］.scale。根据屏幕的像素来绘制图片内容。
2. shouldRasterize :我是翻译成“栅格化”的，在使用shouldRasterize的时候一定要配合使用rasterizationScale，以防止出现Retina屏幕像素化的问题。
3. rasterizationScale :我现在也只有在处理组合透明度动画的时候才用到，作用是图层及其子图层都会被整合成一个整体的图片，解决重叠透明图层的混合失灵问题。

三、消息传递方法

之前在看动画的时候，看到了一段代码，能代替计时器不断的调用方法,将该段代码写在方法体内，就能起到不断调用，直到终止动作：

```
//_cmd是隐藏的参数，代表当前方法的selector
[self performSelector:_cmd withObject:aLayer afterDelay:0.05];
```

四、动画误区

在学习动画基础属性的时候做的例子可能迟钝的我发现不了这个点，但是当我试图将其应用到求攻略上时总是出现一些意想不到的问题，比如，当我在处理点赞动作的时候，希望能呈现心心能由大缩放到位置上，但是在动画结束后，心心的大小不是我设置的tovalue的0.5倍，而是原始大小，之前不论是直接在uiview上做动画还是用第三方“Pop”做动画，toValue都是最终的状态，但是在layer上做动画，发现其实一切都是浮云，动画就只是动画，不会对对象产生影响，所以要做最后需要“移除”的动作的，我们可以在创建layer的时候就设置opacity＝0,通过动画的frameValue和toValue来做动画，最终动画完成后layer还是隐藏的。


